#include <cstdio>
#include <algorithm>

using namespace std;
typedef long long ll;

int a[105], b[105], ta[15][105], tb[15][105];

int main()
{
	int t, n, m, k, i, j, p, mn, mx;
	ll sum;
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d%d%d", &n, &m, &k);
		for(i = 1; i <= n; i++)
			scanf("%d", a + i);
		for(i = 1; i <= m; i++)
			scanf("%d", b + i);
		for(i = 1; i <= n; i++)
			ta[0][i] = a[i];
		for(i = 1; i <= m; i++)
			tb[0][i] = b[i];
		sort(ta[0] + 1, ta[0] + n + 1);
		sort(tb[0] + 1, tb[0] + m + 1);
		for(j = 1; j <= 10 && j <= k; j++)
		{
			for(i = 1; i <= n; i++)
				ta[j][i] = ta[j - 1][i];
			for(i = 1; i <= m; i++)
				tb[j][i] = tb[j - 1][i];
			if(j & 1)
			{
				if(ta[j][1] < tb[j][m])
					swap(ta[j][1], tb[j][m]);
			}
			else
			{
				if(tb[j][1] < ta[j][n])
					swap(tb[j][1], ta[j][n]);
			}
			sort(ta[j] + 1, ta[j] + n + 1);
			sort(tb[j] + 1, tb[j] + m + 1);
			for(p = (j & 1); p < j; p += 2)
			{
				for(i = 1; i <= n; i++)
					if(ta[j][i] != ta[p][i])
						break;
				if(i > n)
					break;
			}
			if(p < j)
				break;
		}
		sum = 0;
		k = (j > k) ? k : ((k - p) % (j - p) + p);
		for(i = 1; i <= n; i++)
			sum += ta[k][i];
		printf("%lld\n", sum);
	}
	return 0;
}
