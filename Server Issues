#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cassert>
const int Q=5005,P=200005;
const int INF=(1<<30);
typedef long long ll;
typedef long double ldb;
#define rg register int
#define cint const register int
char ibuf[1<<21],*IP1=ibuf,*IP2=ibuf;
#define gc() (__builtin_expect(IP1==IP2,0)&&(IP2=(IP1=ibuf)+fread(ibuf,1,1<<21,stdin),__builtin_expect(IP1==IP2,0))?EOF:*IP1++)
#define pc putchar
inline bool ig(const char c){return c>=48&&c<=57;}
inline void read(rg&oi){char c;rg f=1,res=0;while(c=gc(),(!ig(c))&&c^'-');c^'-'?res=(c^48):f=-1;while(c=gc(),ig(c))res=res*10+(c^48);oi=f*res;}
inline void print(rg oi){char io[23];rg l=0;if(oi<0)pc('-'),oi=~oi+1;do io[++l]=(oi%10+48);while(oi/=10);for(;l;--l)pc(io[l]);}
inline void write(cint oi,const char c){print(oi);pc(c);}char _ST_;
int T,n,m,st[Q];ldb f[Q],g[Q][Q];
int h[Q],ce;struct Edge{int to,nxt;}e[P];
inline void edge(cint x,cint y){e[++ce]=(Edge){y,h[x]};h[x]=ce;}
char _ED_;int main(){
	fprintf(stderr,"static memory:%.6lf MB\n",(&_ST_-&_ED_)/1024./1024.);
	read(T);for(;T--;){
		read(n);read(m);
		for(rg i=1,x,y;i<=m;++i)read(x),read(y),edge(x,y);
		for(rg i=1;i<=n;++i)g[1][i]=1.L/i;
		for(rg i=2;i<=n;++i)for(rg j=i;j<=n;++j)
		g[i][j]=1.L*(i-2)/j*g[i-2][j-2]+1.L*(j-i)/j*g[i-1][j-2];
		f[n]=1;for(rg i=n-1;i>=1;--i){
			rg top=0;for(rg j=h[i];j;j=e[j].nxt)st[++top]=e[j].to;
			std::sort(st+1,st+1+top,[](cint x,cint y)->bool{return f[x]>f[y];});
			for(rg j=1;j<=top;++j)f[i]+=f[st[j]]*g[j][top];
		}
		printf("%.15Lf\n",f[1]);
		for(rg i=1;i<=n;++i)h[i]=0,f[i]=0;ce=0;
	}
	return 0;
}
